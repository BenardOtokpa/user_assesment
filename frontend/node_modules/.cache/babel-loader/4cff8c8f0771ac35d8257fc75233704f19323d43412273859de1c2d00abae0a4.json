{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\otokp\\\\OneDrive\\\\Desktop\\\\users-assement\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Input } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _users$data;\n  const [users, setUsers] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  useEffect(() => {\n    // Fetch the list of users from your API database\n    // Replace 'YOUR_API_ENDPOINT' with your actual API endpoint\n    fetch(\"http://localhost:3000/api/v1/getAllUsers\").then(response => response.json()).then(data => setUsers(data)).catch(error => console.error(\"Error fetching users:\", error));\n  }, []);\n  console.log(users);\n\n  // Define the columns for the table\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    key: \"id\"\n  }, {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Email\",\n    dataIndex: \"email\",\n    key: \"email\"\n  }\n  // Add more columns as needed\n  ];\n\n  // Filter the users based on the search text\n  const filteredUsers = (_users$data = users.data) === null || _users$data === void 0 ? void 0 : _users$data.filter(user => user.name.toLowerCase().includes(searchText.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search by name\",\n      value: searchText,\n      onChange: e => setSearchText(e.target.value),\n      className: \"mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: filteredUsers,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jzokPSGTA14k02M8LY2gvm1lL/Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Table","Input","jsxDEV","_jsxDEV","App","_s","_users$data","users","setUsers","searchText","setSearchText","fetch","then","response","json","data","catch","error","console","log","columns","title","dataIndex","key","filteredUsers","filter","user","name","toLowerCase","includes","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/otokp/OneDrive/Desktop/users-assement/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Table, Input } from \"antd\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch the list of users from your API database\n    // Replace 'YOUR_API_ENDPOINT' with your actual API endpoint\n    fetch(\"http://localhost:3000/api/v1/getAllUsers\")\n      .then((response) => response.json())\n      .then((data) => setUsers(data))\n      .catch((error) => console.error(\"Error fetching users:\", error));\n  }, []);\n\n  console.log(users);\n\n  // Define the columns for the table\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      key: \"id\",\n    },\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    // Add more columns as needed\n  ];\n\n  // Filter the users based on the search text\n  const filteredUsers = users.data?.filter((user) =>\n    user.name.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-4\">\n      {/* Search input */}\n      <Input\n        placeholder=\"Search by name\"\n        value={searchText}\n        onChange={(e) => setSearchText(e.target.value)}\n        className=\"mb-4\"\n      />\n\n      {/* User table */}\n      <Table dataSource={filteredUsers} columns={columns} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA;IACAa,KAAK,CAAC,0CAA0C,CAAC,CAC9CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;;EAElB;EACA,MAAMa,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE;EACP;EACA;EAAA,CACD;;EAED;EACA,MAAMC,aAAa,IAAAlB,WAAA,GAAGC,KAAK,CAACQ,IAAI,cAAAT,WAAA,uBAAVA,WAAA,CAAYmB,MAAM,CAAEC,IAAI,IAC5CA,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAC3D,CAAC;EAED,oBACEzB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAElB5B,OAAA,CAACF,KAAK;MACJ+B,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAExB,UAAW;MAClByB,QAAQ,EAAGC,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CH,SAAS,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAGFrC,OAAA,CAACH,KAAK;MAACyC,UAAU,EAAEjB,aAAc;MAACJ,OAAO,EAAEA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACnC,EAAA,CAtDQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}